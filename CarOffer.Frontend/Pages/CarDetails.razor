@page "/details/{carId:int}"
@inject HttpClient Http
@inject NavigationManager NavManager
@using System.Net.Http.Json
@using CarOffer.Frontend.Models

<h3>Car Details</h3>

@if (car == null || offer == null)
{
    <spinner />
}
else
{
    <div class="card">
        <div class="card-body">
            <h5>@car.Make @car.Model</h5>
            <p><strong>Mileage:</strong> @car.Mileage miles</p>
            <p><strong>Engine Power:</strong> @car.EnginePower HP</p>
            <p><strong>Transmission:</strong> @car.Transmission</p>
            <p><strong>Fuel Type:</strong> @car.FuelType</p>
            <p><strong>Price:</strong> Â£@offer.Price</p>
            <p><strong>Gift:</strong> @offer.PromotionalGift</p>

            @if (car.Images.Count > 0)
            {
                <div class="mt-3">
                    @foreach (var url in car.Images)
                    {
                        <img src="@url" alt="Car image" class="img-thumbnail me-2" width="200" />
                    }
                </div>
            }
        </div>
    </div>
}

@code {
    [Parameter] public int carId { get; set; }

    private Car? car;
    private Offer? offer;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("offerId", out var offerIdValue) && int.TryParse(offerIdValue, out var offerId))
        {
            car = await Http.GetFromJsonAsync<Car>($"api/car/{carId}");
            offer = await Http.GetFromJsonAsync<Offer>($"api/offer/{offerId}");
        }
    }

}
